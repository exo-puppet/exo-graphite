#! /bin/sh
### BEGIN INIT INFO
# Provides:          <%= scope.lookupvar('graphite::params::service_carbon_name') %>
# Required-Start:    $local_fs $remote_fs $network 
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Carbon-Cache daemon for Graphite
### END INIT INFO

set -e

NAME=<%= scope.lookupvar('graphite::params::service_carbon_name') %>.py
DAEMON=<%= scope.lookupvar('graphite::params::install_dir') %>/bin/$NAME
DESC="Carbon-Cache"

test -x $DAEMON || exit 0

CARBON_CONFIG=<%= scope.lookupvar('graphite::carbon_conf_dir') %>/carbon.conf
CARBON_LOG_DIR=<%= scope.lookupvar('graphite::carbon_log_dir') %>
CARBON_PID=<%= scope.lookupvar('graphite::params::run_dir') %>/$NAME.pid

CARBON_CMD="<%= scope.lookupvar('graphite::params::install_dir') %>/bin/carbon-cache.py --config=$CARBON_CONFIG --logdir=$CARBON_LOG_DIR --pidfile=$CARBON_PID"

RETRY=15

if test ! -d "<%= scope.lookupvar('graphite::params::run_dir') %>"; then
  mkdir "<%= scope.lookupvar('graphite::params::run_dir') %>"
  chown -R <%= scope.lookupvar('graphite::params::carbon_data_user') %>:<%= scope.lookupvar('graphite::params::carbon_data_group') %> "<%= scope.lookupvar('graphite::params::run_dir') %>"
fi

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

# define LSB log_* functions.
. /lib/lsb/init-functions

case "$1" in
  start)
    log_daemon_msg "Starting $DESC" "$NAME"
    $CARBON_CMD start
    case "$?" in
        0) log_end_msg 0 ;;
        *) log_end_msg 1; exit 1 ;;
    esac
        ;;
  stop)
    log_daemon_msg "Stopping $DESC" "$NAME"
      $CARBON_CMD stop
    case "$?" in
        0) log_end_msg 0 ;;
        *) log_end_msg 1; exit 1 ;;
    esac
        ;;
  status)
      $CARBON_CMD status
    case "$?" in
      0) log_end_msg 0 ;;
      *) log_end_msg 1; exit 1 ;;
    esac
   ;;
  restart|force-reload)
        $0 stop
        $0 start
        ;;
  *)
    echo "Usage: /etc/init.d/$NAME {start|stop|status|restart|force-reload}" >&2
        exit 1
        ;;
esac

exit 0
